package dat104.obl3.controllers;

import java.sql.*;

import dat104.obl3.models.Bruker;

public class Database {
	//TODO: hent og sett metoder for det vi trenger tilgang til i databasen.
	
	private Connection connection;
	private String adresse = "jdbc:postgresql://mod250.hib.no:5432/dat104gruppe4", 
					bruker = "dat104gruppe4", 
					passord = "dat104gruppe4";

	
	public Database() {		
		//Kobler til database
		try {
             Class.forName("org.postgresql.Driver");
             connection = DriverManager.getConnection(adresse, bruker, passord);
             
             //Spesifiserer skjema
             Statement statement = connection.createStatement();
             statement.executeUpdate("SET SCHEMA 'YATZY'");
             statement.close();
        
		} catch (ClassNotFoundException e) {
        	e.printStackTrace();
        } catch (SQLException e) {
        	e.printStackTrace();
        }
	}
	
	/**
	 * Metode som returnerer true dersom brukernavnet ikke finnes fra før
	 * @param brukernavn
	 * @return
	 */
	public boolean validerBrukernavn(String brukernavn) {		
		boolean finnesIkke = false;
		
		try {
			Statement statement = connection.createStatement();
			ResultSet resultSet = statement.executeQuery("SELECT brukernavn FROM bruker WHERE brukernavn='" + brukernavn + "'");		
			finnesIkke = !resultSet.next();//finnesIkke settes til true(!false) dersom brukernavnet ikke finnes
			
			resultSet.close();
			statement.close();	
		} catch(SQLException e) {
			e.printStackTrace();
		
		}	
		return finnesIkke;
	}
	
	/**
	 * Metode for å legge til en bruker i databasen.
	 * @param brukernavn
	 * @param navn
	 * @param epost
	 * @param passord
	 */
	public void leggTilBruker(String brukernavn, String navn, String epost, String passord) {
		
		try {
			
			PreparedStatement ps = connection.prepareStatement("INSERT INTO bruker VALUES(?,?,?,?)");
			ps.setString(1, navn);
			ps.setString(2, brukernavn);
			ps.setString(3, epost);
			ps.setString(4, passord);
			ps.execute();
			ps.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}
	
	/**
	 * Metode som returnerer true dersom eposten ikke finnes fra før.
	 * @param epost
	 * @return
	 */
	public boolean validerEpost(String epost) {		
		boolean finnesIkke = false;
		
		try {
			Statement statement = connection.createStatement();
			ResultSet resultSet = statement.executeQuery("SELECT epost FROM bruker WHERE epost='" + epost + "'");		
			finnesIkke = !resultSet.next();//finnesIkke settes til true(!false) dersom eposten ikke finnes
			
			resultSet.close();
			statement.close();	
		} catch(SQLException e) {
			e.printStackTrace();
		
		}	
		return finnesIkke;
	}
	
	/**
	 * Metode for å sjekke om brukernavn og passord stemmer overens for login. 
	 * @param brukernavn
	 * @param passord
	 * @return
	 */
	public boolean validerLogin(String brukernavn, String passord) {
		boolean gyldig = false;
		
		try {
			Statement statement = connection.createStatement();
			ResultSet resultSet = statement.executeQuery("SELECT passord FROM bruker WHERE brukernavn='" + brukernavn + "'");		
			
			if(resultSet.next()) {
				gyldig = passord.equals(resultSet.getString("passord"));
			}
			
			resultSet.close();
			statement.close();	
		} catch(SQLException e) {
			e.printStackTrace();
		
		}		
		return gyldig;
	}
	
	/**
	 * Metode for å hente ut en bruker. Returnerer et Bruker-objekt.
	 * @param brukernavn
	 * @return
	 */
	public Bruker hentBruker(String brukernavn) {
		String 	navn = null,
				epost = null,
				passord = null;
		try {
			Statement statement = connection.createStatement();
			ResultSet resultSet = statement.executeQuery("SELECT * FROM bruker WHERE brukernavn='" + brukernavn + "'");		
			
			if(resultSet.next()) {
				navn = resultSet.getString("navn");
				epost = resultSet.getString("epost");
				passord = resultSet.getString("passord");
			}
			resultSet.close();
			statement.close();	
			
		} catch(SQLException e) {
			e.printStackTrace();
		}	
		
		if(navn != null) {
			return new Bruker(brukernavn, navn, epost, passord);
		}
		return null;
	}
	
	public static void main(String[] args) {
		Database database = new Database();	
		System.out.println(database.validerBrukernavn("brukerNavn"));
	}
	
}
